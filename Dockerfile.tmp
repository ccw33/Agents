# AI Agent Web Service Dockerfile - 简化版本
FROM python:3.11-slim

# 设置工作目录
WORKDIR /app

# 设置环境变量
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1

# 安装系统依赖
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    git \
    curl \
    && rm -rf /var/lib/apt/lists/*

# 创建简化的requirements.txt（去除Playwright等重型依赖）
COPY web-service/requirements.txt requirements-full.txt
RUN grep -E '^(fastapi|uvicorn|starlette|pydantic|httpx|aiohttp|structlog|python-json-logger|langgraph|langsmith|langchain-core|openai|typing-extensions|python-dotenv|beautifulsoup4|Pillow)' requirements-full.txt > requirements.txt || echo "fastapi==0.110.0\nuvicorn[standard]==0.27.0\nstarlette==0.36.3\npydantic>=2.7.4\nstructlog>=24.1.0" > requirements.txt

# 安装Python依赖
RUN pip install --no-cache-dir -r requirements.txt

# 复制应用代码和Agent代码
COPY web-service/app/ ./app/
COPY agent-frameworks/langgraph/prototype_design/ ./agent-frameworks/langgraph/prototype_design/

# 创建输出目录
RUN mkdir -p /app/agent-frameworks/langgraph/prototype_design/outputs

# 创建非root用户
RUN useradd --create-home --shell /bin/bash app \
    && chown -R app:app /app
USER app

# 暴露端口
EXPOSE 8000

# 健康检查
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# 启动命令
CMD ["python", "-m", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
